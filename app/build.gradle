plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'kotlin-allopen'
}


ext {
    versionMajor = 1 // 1 to 99
    versionMinor = 0 // 0 to 99
    versionPatch = 0// 0 to 999 start with 1
    versionHotFix = 0// 1 to 999 start with 1
    versionClassifier = 5
    versionClassifierCodes = ['SNAPSHOT': 0, 'APLHA': 1, 'BETA': 2, 'RC1': 3, 'RC2': 4, 'RELEASE': 5].withDefault {
        0
    }
    isSnapshot = true
    minimumSdkVersion = 21
}

allOpen {
    // kotlin class are default final, all-open plugin allow class to be mock by mockito
    annotation 'com.coderbyte.moviemania.testing.OpenClass'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.coderbyte.moviemania"
        minSdkVersion minimumSdkVersion
        targetSdkVersion 30
        versionCode generateVersionCode()
        versionName generateVersionName()
        multiDexEnabled true
        dataBinding.enabled = true
        vectorDrawables.useSupportLibrary = true
        resConfigs "en"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    dexOptions {
        preDexLibraries = false
    }

    lintOptions {
//        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    buildTypes {

        debug{
            applicationIdSuffix '.dev'
            buildConfigField 'String', 'BASE_URL', '"https://api.themoviedb.org/"'
            buildConfigField 'String', 'API_KEY', '"1a97f3b8d5deee1d649c0025f3acf75c"'
            buildConfigField 'String', 'POSTER_IMAGE_BASE_URL', '"https://image.tmdb.org/t/p/w342"'
            buildConfigField 'String', 'BACKDROP_IMAGE_BASE_URL', '"https://image.tmdb.org/t/p/w780"'
            buildConfigField 'String', 'LOGO_IMAGE_BASE_URL', '"https://image.tmdb.org/t/p/w342"'
            buildConfigField 'String', 'CAST_IMAGE_BASE_URL', '"https://image.tmdb.org/t/p/h632"'

            resValue "string", "app_name_movie", "Dev Movie"
        }
        telnor {
            applicationIdSuffix '.telnor'
            buildConfigField 'String', 'BASE_URL', '"https://api.themoviedb.org/"'
            buildConfigField 'String', 'API_KEY', '"1a97f3b8d5deee1d649c0025f3acf75c"'
            buildConfigField 'String', 'POSTER_IMAGE_BASE_URL', '"https://image.tmdb.org/t/p/w342"'
            buildConfigField 'String', 'BACKDROP_IMAGE_BASE_URL', '"https://image.tmdb.org/t/p/w780"'
            buildConfigField 'String', 'LOGO_IMAGE_BASE_URL', '"https://image.tmdb.org/t/p/w342"'
            buildConfigField 'String', 'CAST_IMAGE_BASE_URL', '"https://image.tmdb.org/t/p/h632"'

            resValue "string", "app_name_movie", "Telnor Movie"
        }

        grameenphone {
            debuggable true
            applicationIdSuffix '.grameenphone'
            buildConfigField 'String', 'BASE_URL', '"https://api.themoviedb.org/"'
            buildConfigField 'String', 'API_KEY', '"1a97f3b8d5deee1d649c0025f3acf75c"'
            buildConfigField 'String', 'POSTER_IMAGE_BASE_URL', '"https://image.tmdb.org/t/p/w342"'
            buildConfigField 'String', 'BACKDROP_IMAGE_BASE_URL', '"https://image.tmdb.org/t/p/w780"'
            buildConfigField 'String', 'LOGO_IMAGE_BASE_URL', '"https://image.tmdb.org/t/p/w342"'
            buildConfigField 'String', 'CAST_IMAGE_BASE_URL', '"https://image.tmdb.org/t/p/h632"'

            resValue "string", "app_name", "Grameenphone Movie"
        }

        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'BASE_URL', '"https://api.themoviedb.org/"'
            buildConfigField 'String', 'API_KEY', '"1a97f3b8d5deee1d649c0025f3acf75c"'
            buildConfigField 'String', 'POSTER_IMAGE_BASE_URL', '"https://image.tmdb.org/t/p/w342"'
            buildConfigField 'String', 'BACKDROP_IMAGE_BASE_URL', '"https://image.tmdb.org/t/p/w780"'
            buildConfigField 'String', 'LOGO_IMAGE_BASE_URL', '"https://image.tmdb.org/t/p/w342"'
            buildConfigField 'String', 'CAST_IMAGE_BASE_URL', '"https://image.tmdb.org/t/p/h632"'


            resValue "string", "app_name", "Movie Mania"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    androidExtensions {
        experimental = true
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

android.applicationVariants.all { variant ->
    variant.outputs.each { output ->
        output.outputFileName = "${variant.name}-My Banglalink-${variant.versionCode}-${variant.versionName}-${getDate()}.apk"
    }
}

static def getDate() {
    return new Date().format('yyyy-MM-dd_HHmm')
}

private Integer generateVersionCode() {
    def versionCode = ext.versionMajor * 100000 + ext.versionMinor * 1000 + ext.versionPatch * 100 + ext.versionHotFix * 1
    println 'VersionCode ' + versionCode
    return versionCode
}

private String generateVersionName() {
    String versionName = "${ext.versionMajor}.${ext.versionMinor}.${ext.versionPatch}.${ext.versionHotFix}"
    if (ext.versionClassifier == null) {
        if (ext.isSnapshot) {
            ext.versionClassifier = "SNAPSHOT"
        }
    }

    println 'VersionName ' + versionName
    return versionName
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.2'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.2'

    // lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    // Anko
    implementation('org.jetbrains.anko:anko:0.10.8') {
        exclude group: 'org.jetbrains.anko', module: 'anko-sqlite'
    }


    // Dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    // Rx
    implementation "io.reactivex.rxjava2:rxjava:$rx_java_version"
    implementation "io.reactivex.rxjava2:rxkotlin:$rx_kotlin_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rx_android_version"

    // ssp, sdp
    implementation "com.intuit.sdp:sdp-android:$dimen_version"
    implementation "com.intuit.ssp:ssp-android:$dimen_version"

    // logger
    implementation 'com.orhanobut:logger:2.2.0'

    //Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation ("com.github.bumptech.glide:okhttp3-integration:$glide_version"){
        exclude group: 'glide-parent'
    }

    // retrofit & okhttp
    api 'com.squareup.retrofit2:retrofit:2.6.2'
    api 'com.squareup.retrofit2:converter-gson:2.6.2'
    api 'com.squareup.retrofit2:adapter-rxjava2:2.6.2'
    api 'com.squareup.okhttp3:okhttp:3.12.2'

    // network logger
    api('com.github.ihsanbal:LoggingInterceptor:3.0.0') {
        exclude group: 'org.json', module: 'json'
    }

    // transition anywhere
    implementation 'com.andkulikov:transitionseverywhere:2.1.0'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.5'

    // lottie
    implementation 'com.airbnb.android:lottie:3.5.0'

    //reactivenetwork
    implementation 'com.github.pwittchen:reactivenetwork-rx2:3.0.8'

    //Stetho https://github.com/facebook/stetho
    implementation 'com.facebook.stetho:stetho:1.5.1'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.1'
    implementation 'com.facebook.stetho:stetho-js-rhino:1.5.1'

    //test
    testImplementation "org.mockito:mockito-core:2.26.0"
    testImplementation "org.assertj:assertj-core:3.12.2"
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.0'

    testImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"

    implementation 'androidx.multidex:multidex:2.0.1'

    //android test
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

}